2017-08-18
----------

There is yet another raspbian release.  Based on Stretch. Need to
ensure systemd still doesn't use timedatectl / rsynctimed to do ntp
stuff, and still has /etc/init.d/ntp enabled.

so we need to install ntp during provision.  This (through an override in systemd - see systemd-analyse delta) disables systemd-timesyncd).




2017-08-11
----------
Provision/install/boot-solo.sh should do this:

From Raspian to SOSI:
Flash stock rapbian
touch /boot/ssh
uncomment: dtparam=i2c_arm=on
enable both clocks:
 dtoverlay=i2c-rtc,ds3231
 dtoverlay=i2c-rtc,mcp7941x
sudo apt-get -y purge fake-hwclock

AND WE GET:

system boots and has /dev/rtc0, but doesn't read the time.
 So: todo:
     1) sort out _reading_ hctosys on boot (and do it early).  See old method.
     2) check booting with usb-network-dongle sets botht the time and the hwclock.
        ... and now long that takes.

     3) /lib/udev/hwclock-set is what the current system now does.  It's called from udev, if we get rid of the exclusionary stanza:
     sed -i "s:/run/systemd/system:/i/am/nonexistent:g"  /lib/udev/hwclock-set (done in the provision.sh)
     So something, (udev, I guess) forces this file to run when /dev/rtc0 is created?  Or something?

     NEWINFO:  udev takes action when enabling /dev/rtc0, it runs one of it's "rules" from /lib/udev/rules.d/85-hwclock.rules, which says to run KERNEL=="rtc0", RUN+="/lib/udev/hwclock-set $root/$name".  So /lib/udev/hwclock-set GETS RUN. And this sets the system clock from the hw clock.
     And That's That.
     more info probably from enabling more loggin in udev via /etc/udev/udev.conf (err,info,debug)
     



-------------------------------------------
HW: to get /dev/rtc0 present:
 - dtparam=i2c_arm=on (uncomment)
 - dtoverlay=i2c-rtc,ds3231 (or dtoverlay=i2c-rtc,mcp7941x for piface-shim)
 - haven't tested what happens if we do both.
 
That's it for hardware
---------------------------------------------

---------------------------------------------------------------------------
Software:
---------

Stock raspbian lite doesn use systemd-timesyncd to sync time.

 - Fake-hwclock is still in use (creating /using /etc/fake-hwclock.data)
 - confirmed by removing it, rebooting (no net), time correct, file returned.
 - I am logged in over USB-serial.
 - so disable fake-hwclock: apt-get purge fake-hwclock
 - and confirmed it removed /etc/init.d/fake-hwclock and /sbin/fake-hwclock.
 - and confirm with reboot
 - yahoo - get 1970.

At tis point we can run hwclock -r, and we see a time of Jan 2000



Systemd investigations (written on 2017-08-16):
-----------------------------------------------

Look - timesyncd is disabled:
systemctl is-enabled systemd-timesyncd

unit files are in:
/lib/systemd/system	- the original full unit files.
/lib/systemd/           - the executables (ELFL systemd-timesyncd)

But whether a service is enabled or not depends on the contents of the
"wants" directories in: /etc/systemd/system.  I think this is how the
"tree" of dependencies is built up within systemd.  Through symlinks.
The "Wants" are got from the "install" sections of the unit files, so
when you enable a service (via systemctl enable XXX) it checks that
the unit files (which ones?) and plops the appropriate symlinks into
the .wants directories.

Note that "systemd-analyze critical-chain" prints the tree of startup jobs.

systemd-analyze -h - for more options.
systemd-analyze plot >  /tmp/b.svg # is particularly good as it gives a svg plot (for browser)

Note: dhcpcd takes  a long time, and its probably to do with this:
pi@raspberrypi:/etc/systemd/system $ systemd-delta
[EXTENDED]   /lib/systemd/system/dhcpcd.service → /etc/systemd/system/dhcpcd.service.d/wait.conf
[EXTENDED]   /lib/systemd/system/rc-local.service → /etc/systemd/system/rc-local.service.d/ttyoutput.conf

The wait.conf file for dhcpd overrides the normal behaviour to add
"-w", which "waits for an address on each interface".  Dunno why
raspbian people did this.  But it's not clock stuff so shouldn't be
discussed here.

more info about the /boot/ssh is in tbox/notes/systemd-cheatsheet.txt

Note: systemd keeps it's "time cache" in /var/lib/systemd/clock
