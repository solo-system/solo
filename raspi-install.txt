TODO: add a bit to remove the /etc/profile.d/raspi-config crap from system
      should probably go in provision.sh
      /usr/bin/raspi-config (need to delete the line from /etc/inittab, and uncomment the other?)

To build a image:
-----------------
> flash a card with BASE raspbian:
sudo dd bs=4M if=~/raspi/images/2014-09-09-wheezy-raspbian.img of=/dev/sdc ; sync ; sync

> plug it in a raspi, boot and log in as root: ssh raspberrypi -l pi
sudo su
cd /opt
git clone jdmc2@jdmc2.com:git/recorder
cd recorder
chmod +x /opt/recorder/provision.sh
./provision.sh

sudo poweroff

### Move card back to pc, and copy to HDD.  This image is bootable.
> if you want to shrink the / partition:
img=/home/jdmc2/raspi/images/recorder-X.img
sudo chown jdmc2.jdmc2 $img
sudo losetup -v -o $((122880*512)) /dev/loop0 recorder-2014-11-12.img
sudo e2fsck -f /dev/loop0
sudo resize2fs -M /dev/loop0  (again and again if you like!)
> currently get fs as 269186 blocks long (bloks are 4k).  So to add 100Mb, add 25,000 blocks)
sudo resize2fs -p /dev/loop0 $((269186+25000))
sudo losetup -d /dev/loop0
sudo sync; 

> shrink containing partition: 294186 *4 (to get K).
onekblocks=`echo "294186 * 4" | bc`
fcmd="d \n 2 \n n \n p \n 2 \n 122880 \n +${onekblocks}K \n w"
echo -e $fcmd
echo "Now run: echo -e \$fcmd | fdisk whichever.img"

> Then check truncating the img file itself.
> fdisk says end of p2 is 3322880, and blocks are 512bytes, so truncate:
truncate -s $((3322880*512)) dd.img
zip -r image.zip image.img

done

==============================================================


TODO: add these to this build procedure, AND to flash-card.sh
# remove all files in /var/log
find mnt-root/var/log -type f -delete

# remove any stray amon.log's
rm -f home/jdmc2/amon/amon.log

add: amixer -q -c 1 set 'Mic' 15dB (done - see flash-card.sh)

Need to add a section about GPU_split=32 or whatever.

--------------------------------------------

Networking - wirelessly:
==========
sudo echo "
network={
    ssid=\"BTHomeHub2-5QCP\"
    psk=\"d6346cbcb2\"
    key_mgmt=WPA-PSK
}
" >> slash/etc/wpa_supplicant/wpa_supplicant.conf 
EOF


================================================================
RTC (make sure rtc is plugged in)
---
sudo apt-get purge fake-hwclock
sudo apt-get install i2c-tools bootlogd emacs23-nox
sudo update-rc.d hwclock.sh defaults
sudo update-rc.d hwclock.sh enable

sudo nano /etc/modules ( append: i2c-dev i2c-bcm2708)
sudo nano /etc/modprobe.d/raspi-blacklist.conf # remove i2c line

# add this just before the case .. start) stanza
sudo emacs -nw /etc/init.d/hwclock.sh
"echo ds1307 0x68 > /sys/class/i2c-adapter/i2c-1/new_device"

sudo reboot (if you want to test / set the rtc)

# sudo i2cdetect -y 0 (or 0)
# sudo hwclock -r
================================================================

reboot-switch  ( this should really live in /home/amon/bin/)
-------------
SERVER=jdmc2.com
scp jdmc2.com:recorder/switchoff.py ~
chmod +x switchoff.py

sudo nano /etc/rc.local
add: /home/amon/switchoff.py &

================================================================
vmon
====
sudo emacs -nw /boot/config.txt [disable_camera_led=1]
# reboot if you care about the light now.
mkdir /mnt/sdcard/vmondata/
cp (from somewhere) takePhoto to /mnt/sdcard/vmondata/
# run it to test it.
crontab -e
*/2 * * * *    /mnt/sdcard/vmondata/takePhoto

# then ensure we have passwordless login to jdmc2.com
ssh-keygen
ssh-copy-id jdmc2.com

==============================================================================
webserver
=========
sudo apt-get install apache2 libapache2-mod-suphp
sudo a2enmod userdir 

sudo emacs -nw /etc/apache2/conf.d/amondata.conf

Alias /amondata /mnt/amondata
<Directory /mnt/amondata>
  Options Indexes
  Order allow,deny
  Allow from all
  Require all granted
  Satisfy Any
</Directory>

mkdir /home/jdmc2/public_html/
mkdir /home/jdmc2/public_html/utils/
#scp -prv jdmc2.com:websites/jdmc2.com/utils public_html

sudo nano /etc/suphp/suphp.conf
edit it so that 
* allow_file_group_write true
* allow_directory_group_writable true
* change "check vhost tree" to false.

sudo service apache2 restart
wget localhost

to get suphp going:
http://www.debiantutorials.com/installing-suphp/

apt-get install libapache2-mod-suphp
a2dismod php5
/etc/init.d/apache2 restart

==================================================

Compression
===========

Just tested lame.  on 1 minute.  lame -f is 5x realtime, and lame (default) is 3.38 realtime.  
lame	3.38RT	9.0%			
lame -f 4.96RT  9.0% (sizes are exactly the same since CBR of 64Kbps)
lame process size is less than 5MB of ram running.


------------------------------

# disable camera led 
sudo nano /boot/config.txt
[ disable_camera_led=1

-----------------------------

==========================================================================
TODO:
-----

audio input dongle
wireless dongles

deployments:
mount on arcticCat
mount in car (in cabin or elsewhere?)
Robbie - record with 
bats

develop:
solar?
compress audio
record video
pir sensor?
durie camera (still camera is fine).

TODO:
	
straighten out logic in amoncleanup, with its no-ops and stuff.  think
we need a are-we-running function which returns yes/no.  if yes, its
cos everything is running well, if NO its because were not running.
If there is an error, it should clear out the error and leave things
NOT running.  I think.  sort out fake-hw clock, which saves / restores
estimated times over reboots.  Is this worth trying ?  Surely...
clarify use of local.settings - warn about defaults, how about amon
config to show what it will do.

--------------------
serial console cable
--------------------
lsusb:
ID 067b:2303 Prolific Technology, Inc. PL2303 Serial Port
wire: black to ground, white to Tx, green to Rx.  on outside row:
..GTR.........  (ground transmit receive) (black, white, green)
can also attach red to pins to the left (both 5V) to power the pi from USB.

boot the pi
then run this on the laptop (you need to be in group dialout)
screen /dev/ttyUSB0 115200

and you should see the login prompt.  if you can not type, use minicom
to turn off flow control.  8-N-1 bit arrangement.

PPP: set up pppd to accept point-to-point internet link.
sudo apt-get install pppd 
hmmm - ppp not easy...

===========================================
fast flash:
-----------

# To clone a working amon machine, put card into memorycard reader then
# I did this:
sudo fsck.fat  -a -V -v /dev/sdc1  # to check the filesystems on the memcard.
sudo fsck -f -p -v /dev/sdc2       # to check the filesystems on the memcard.

#finally, copy the card to local hard drive
sudo dd bs=512 count=5785600 if=/dev/sdc of=amonruns.img
sync

-------
timestamp log file: add date to arecord output:

tail -f /mnt/sdcard/amondata/wavs/arecord.log | while read line ; do date=`date +"%Y-%m-%d %H-%M-%S"` ; uptime=`uptime`; echo $date $uptime $line ; done
----

to set system time from internet, do :

sudo ntpdate -s time.nist.gov
(needs sudo apt-get install ntpdate)
then set hwclock from system:
/sbin/hwclock -w

--------------------
sudo apt-get --compile source alsa-utils
installs and compiles source.  BUT you need to add lots of dependentpackages
